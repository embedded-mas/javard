/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

//https://docs.github.com/pt/github/authenticating-to-github/creating-a-personal-access-token
//https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven
//https://docs.gradle.org/current/userguide/publishing_maven.html#publishing_maven:complete_examples

plugins {
    id 'java-library'    
	id 'maven-publish'
}

//version '0.023-SNAPSHOT'
//group   'embedded-mas'

version = '0.036-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // https://mvnrepository.com/artifact/com.fazecast/jSerialComm
    api group: 'com.fazecast', name: 'jSerialComm', version: '2.11.0'
    

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    api "com.neuronrobotics:nrjavaserial:5.2.1"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}


publishing {
    publications {
        maven(MavenPublication) {
            from components.java            
            groupId = 'javard'
            artifactId = 'javard'
            
            
        }
    }
}

task publishMavenGitHub(dependsOn: [ 'build', 'publishToMavenLocal']) {
  doLast {
    def wdir = System.getProperty("user.home")+'/.m2/repository/javard/javard'
    def rdir = '../embedded-mas-mvn-repo/'    
    exec {
        commandLine 'git', 'pull'
        workingDir rdir
    }
   copy {
        from wdir
        include project.version+'/**'
        into rdir+'/javard/javard'         
    }
    exec {
        commandLine 'git', 'add', '*'
        workingDir rdir
    }
    exec {
        commandLine 'git', 'commit', '-a', '-m', 'javard new version ' + project.version
        workingDir rdir
    }
    exec {
        commandLine 'git', 'push'
        workingDir rdir
    }
  }
    
}
